# Zephyr Android PR build pipeline
# Executes for PRs into the `master` branch.

name: $(Date:yyyyMMdd)$(Rev:rr)

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - .azure-devops/android-pr.yml

pr:
  branches:
    include:
    - master
  paths:
    include:
      - .azure-devops/android-pr.yml
      - android/*

pool:
  vmImage: 'macOS-latest'

steps:
- task: JavaToolInstaller@0
  displayName: Install Java 11
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
- task: DownloadSecureFile@1
  displayName: Fetch google-services-dev.json
  inputs:
    secureFile: 'google-services-dev.json'
- task: CopyFiles@2
  displayName: Install google-services-dev.json
  inputs:
    sourceFolder: '$(Agent.TempDirectory)'
    contents: 'google-services-dev.json'
    targetFolder: 'android/app'
- task: Bash@3
  displayName: Rename google-services-dev.json
  condition: always()
  inputs:
    targetType: inline
    workingDirectory: 'android/app'
    script: mv google-services-dev.json google-services.json
- task: Gradle@2
  displayName: checkstyle
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    tasks: 'checkstyle --info'
- task: Gradle@2
  displayName: pmd
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    tasks: 'pmd --info'
- task: Gradle@2
  displayName: Build devDebug
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    tasks: '-PbuildNumber=$(Build.BuildNumber) -PfirebasePerformanceInstrumentationEnabled=true assembleDevDebug'
- task: Gradle@2
  displayName: Run tests
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'testDevDebug'
- task: CopyFiles@2
  displayName: Stage reports for publishing
  condition: always()
  inputs:
    contents: '**/reports/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
    cleanTargetFolder: true
- task: PublishBuildArtifacts@1
  displayName: Publish reports
  condition: always()
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: Reports
- task: Bash@3
  displayName: Rename devDebug APK
  condition: always()
  inputs:
    targetType: inline
    workingDirectory: 'android/app/build/outputs/apk/dev/debug'
    script: mv app-dev-debug.apk zephyr-dev-debug-$(Build.BuildNumber).apk
- task: CopyFiles@2
  displayName: Stage devDebug APK for publishing
  condition: always()
  inputs:
    contents: 'android/app/build/outputs/apk/dev/debug/*.apk'
    targetFolder: $(Build.ArtifactStagingDirectory)
    cleanTargetFolder: true
    flattenFolders: true
- task: PublishBuildArtifacts@1
  displayName: Publish devDebug APK
  condition: always()
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: APK