apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.jaredsburrows.license'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// Keystore configuration
def keystorePropertiesFile = rootProject.file('android-keystore.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Versions
def versionMajor = 2
def versionMinor = 0
def versionPatch = 0

// Initial version code is based on major.minor.patch
// For example: 2.1.3 -> 2010300
def vCode = versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100

// If set, use buildNumber instead. Expected to be in format yyyyMMddrr, trimmed to yyMMddrr.
// For example: 19050101 -> first build on May 1, 2019
if (hasProperty('buildNumber')) {
    def buildNumber = Integer.valueOf(property('buildNumber').substring(2))
    vCode = buildNumber
}

// Git hash
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

// Secrets
Properties props = new Properties()
if (file('private.properties').exists()) {
    props.load(file('private.properties').newDataInputStream())
    props.setProperty('PROPS_SET', 'true')
} else {
    logger.warn('private.properties is missing!')
    props.setProperty('PROPS_SET', 'false')
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.texasgamer.zephyr"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode vCode
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
        buildConfigField "String", "BUILD_DATE", "\"${new Date().format('yyyyMMddHHmmss')}\""
        buildConfigField "String", "BUILD_NUMBER", "\"${System.getenv('BUILD_NUMBER') ?: new Date().format('yyyyMMddHHmmss')}\""
        buildConfigField "boolean", "PROPS_SET", "${props.getProperty('PROPS_SET') ?: 'false'}"
        buildConfigField "String", "APP_CENTER_SECRET", "\"${props.getProperty('APP_CENTER_SECRET')}\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndkVersion "21.3.6528147"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.incremental": "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            debuggable true
        }
    }
    flavorDimensions "mode"
    productFlavors {
        production {

        }
        beta {
            versionNameSuffix "-beta-${getGitHash()}"
        }
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev-${getGitHash()}"
            versionCode 1
        }
    }
    buildFeatures {
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
    lintOptions {
        abortOnError true
        xmlReport false
        htmlReport true
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
        htmlOutput file("${project.rootDir}/reports/lint/lint-result.html")
        xmlOutput file("${project.rootDir}/reports/lint/lint-result.xml")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AppCenter
    implementation "com.microsoft.appcenter:appcenter-distribute:4.1.0"

    // ButterKnife
    implementation ('com.jakewharton:butterknife:10.2.3') {
        exclude module: 'support-compat'
    }
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    // CameraView
    implementation 'com.otaliastudios:cameraview:2.7.0'

    // Chrome Custom Tabs
    implementation 'androidx.browser:browser:1.3.0'

    // AndroidX Core
    implementation 'androidx.core:core-ktx:1.3.2'

    // Dagger
    implementation 'com.google.dagger:dagger:2.32'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.29.1'

    // Design
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // Firebase
    implementation 'com.google.firebase:firebase-core:18.0.2'
    implementation 'com.google.firebase:firebase-config:20.0.3'
    implementation 'com.google.firebase:firebase-ml-vision:24.1.0'
    implementation 'com.google.firebase:firebase-perf:19.1.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'

    // Flipper
    debugImplementation 'com.facebook.flipper:flipper:0.74.0'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.74.0'
    debugImplementation 'com.facebook.soloader:soloader:0.10.1'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-vision-common:19.1.3'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // IndefinitePagerIndicator
    implementation 'com.ryanjeffreybrooks:indefinitepagerindicator:1.0.10'

    // IndicatorFastScroll
    implementation 'com.reddit:indicator-fast-scroll:1.3.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2-native-mt'

    // LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.3'

    // Palette
    implementation 'androidx.palette:palette-ktx:1.0.0'

    // Permissions
    implementation 'com.nabinbhandari.android:permissions:3.8'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Room
    implementation "androidx.room:room-runtime:2.2.6"
    annotationProcessor "androidx.room:room-compiler:2.2.6"

    // SocketIO
    implementation ('io.socket:socket.io-client:1.0.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }

    // Tests
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'org.mockito:mockito-core:3.7.7'
    testImplementation 'com.google.truth:truth:1.1.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // WindowManager
    implementation "androidx.window:window:1.0.0-alpha02"

    // WorkManager
    implementation "android.arch.work:work-runtime:1.0.1"
    implementation 'androidx.annotation:annotation:1.1.0'
}

apply plugin: 'com.google.gms.google-services'